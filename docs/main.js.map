{"version":3,"sources":["./src/app/api-call.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiCallService {\n\n  constructor(private http : HttpClient) { }\n\n  private apiEndpoint = \"https://exampleproject-ac932-default-rtdb.firebaseio.com/post.json\";\n\n  firebaseGetCall(){\n    return this.http.get(this.apiEndpoint);\n  }\n\n  firebasePostCall(payload){\n    return this.http.post(this.apiEndpoint, payload);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { ApiCallService } from \"../app/api-call.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {\n  title = 'firebaseProject';\n\n  getResponse: any = \"\";\n  postResponse: any = \"\";\n  constructor(private firebaseService: ApiCallService) {}\n\n  ngOnInit(){\n    this.makeGetCall();\n  }\n\n  makeGetCall(){\n    this.firebaseService.firebaseGetCall().subscribe(\n      (data) => {\n        console.log(data);\n        this.getResponse = JSON.stringify(data);\n      }, (error) => {\n        console.error(\"error\");\n        alert(error);\n      }, () =>{\n        console.log(\"Get call successfull.\");\n      }\n    );\n  }\n\n  onBottomSectionClick(){\n    console.log(\"Bottom section clicked.\");\n    this.makePostCall();\n  }\n\n  makePostCall(){\n    const payload = {\n      superHeroes: [\"Captain Marvel\", \"Hulk\"],\n      superVillains: [\"Thanos\", \"Hela\"]\n    };\n    this.firebaseService.firebasePostCall(payload).subscribe(\n      (data) => {\n        console.log(data);\n        const res = {};\n        res[data['name']] = payload;\n        this.postResponse = JSON.stringify(res);\n      }, (error) => {\n        console.error(\"error\");\n        alert(error);\n      }, () =>{\n        console.log(\"Post call successfull.\");\n        this.makeGetCall();\n      }\n    );\n  }\n\n}\n","<section class=\"top-container\">\n  <div class=\"content\">\n    <div class=\"title\">Firebase API Calls!</div>\n  </div>\n</section>\n<section class=\"middle-container\">\n  <div class=\"content\">\n    <h3>JSON GET Response:</h3>\n    <div class=\"response\"> {{getResponse}} </div>\n  </div>\n</section>\n<section class=\"bottom-container\">\n  <div class=\"content\" (click)=\"onBottomSectionClick()\">\n    <h3 class=\"clickableContent\">JSON POST (Click to make post call) :</h3>\n    <div class=\"response\"> {{postResponse}} </div>\n  </div>\n</section>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { ApiCallService } from \"./api-call.service\";\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [ApiCallService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}